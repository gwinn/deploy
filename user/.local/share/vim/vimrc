"""" General
if has('gui_running')
  set lines=56 columns=165
  set guioptions+=LlRrb
  set guioptions-=LlRrb
  set guifont=Fira\ Mono\ for\ Powerline\ Plus\ Nerd\ File\ Types\ 10
  set guioptions-=T
  set guioptions-=m
  map  <silent>  <S-Insert>  "+p
  imap <silent>  <S-Insert>  <Esc>"+pa
endif

syntax on
filetype off

set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set textwidth=79
set ignorecase
set lbr
set tw=500
set noshowmode
set noswapfile
set autoread
set title
set nowrap
set ttyfast
set cursorline
set colorcolumn=+1
set number
set nocompatible
set ruler
set showcmd
set nu
set incsearch
set scrolljump=7
set nobackup
set mousemodel=popup
set encoding=utf-8
set termencoding=utf-8
set hidden
set autoindent
set wildchar=<TAB>
set backspace=indent,eol,start whichwrap+=<,>,[,]
set laststatus=2
set fillchars+=stl:\ ,stlnc:\
set smartindent
set smartcase
set lazyredraw
set magic
set fo+=cr
set viminfo^=!
set wildmenu
set wcm=<Tab>
set clipboard=unnamedplus,unnamed

nnoremap <F3> :set invpaste paste?<CR>
set pastetoggle=<F3>
set showmode

""""""""" Cursor & coloring
set t_Co=256
set background=dark

set guicursor=n-v-c:block-Cursor
set guicursor+=n-v-c:blinkon0
set guicursor+=i:blinkwait2

hi CursorLine term=bold cterm=bold ctermbg=059 guibg=grey20
hi colorcolumn term=bold cterm=bold ctermbg=059 guibg=grey20
hi Cursor guifg=white guibg=grey20
hi iCursor guifg=white guibg=grey20

"""" Filetypes & System
au FileType php    setl sw=4 sts=4 sw=4 et
au FileType python setl sw=4 sts=4 sw=4 et
au FileType jinja  setl sw=4 sts=4 sw=4 et
au FileType twig  setl sw=4 sts=4 sw=4 et
au FileType make   setl sw=8 sts=8 sw=8 noexpandtab

let g:AutoClosePairs = {'(': ')', '{': '}', '[': ']', '"': '"'}
let g:netrw_browsex_viewer="open"
let g:netrw_home=expand("/tmp")
let g:netrw_keepdir=1
let g:netrw_liststyle=3
set viminfo+=n/tmp/.viminfo

menu Encoding.koi8-r :e ++enc=koi8-r<CR>
menu Encoding.windows-1251 :e ++enc=cp1251<CR>
menu Encoding.cp866 :e ++enc=cp866<CR>
menu Encoding.utf-8 :e ++enc=utf8 <CR>

"""" Bindings
" Save
nmap <F2> :w<cr>
vmap <F2> <esc>:w<cr>i
imap <F2> <esc>:w<cr>i
imap >Ins> <Esc>i

" Del line
nmap <C-d> dd
imap <C-d> <esc>ddi

" F4 - error log
nmap <F4> :copen<cr>
vmap <F4> <esc>:copen<cr>
imap <F4> <esc>:copen<cr>

" F5 - buffer list
nmap <F5> <Esc>:BufExplorer<cr>
vmap <F5> <esc>:BufExplorer<cr>
imap <F5> <esc><esc>:BufExplorer<cr>

" F6 - previous buffer
map <F6> :bp<cr>
vmap <F6> <esc>:bp<cr>i
imap <F6> <esc>:bp<cr>i

" F7 - next buffer
map <F7> :bn<cr>
vmap <F7> <esc>:bn<cr>i
imap <F7> <esc>:bn<cr>i

" F8 - Vundle plugin install
map <F8> :PluginInstall<cr>
vmap <F8> <esc>:PluginInstall<cr>
imap <F8> <esc>:PluginInstall<cr>

" F9 - "make"
map <F9> :make<cr>
vmap <F9> <esc>:make<cr>i
imap <F9> <esc>:make<cr>i

" F10 - del buffer
map <F10> :bd<cr>
vmap <F10> <esc>:bd<cr>
imap <F10> <esc>:bd<cr>

" F12 - build tags
" map <F12> :!/usr/bin/ctags -R --fields=+iaS --extra=+q .<CR>

" Smart home key
noremap <expr> <silent> <Home> col('.') == match(getline('.'),'\S')+1 ? '0' : '^'
imap <silent> <Home> <C-O><Home>


"""" Plugins

set rtp+=~/.local/share/vim/bundle/Vundle.vim

call vundle#begin("$HOME/.local/share/vim/bundle")
    Plugin 'gmarik/Vundle.vim'
    Plugin 'Valloric/YouCompleteMe'
    Plugin 'vim-scripts/pyte'
    Plugin 'vim-scripts/bufexplorer.zip'
    Plugin 'vim-scripts/spacehi.vim'
    Plugin 'vim-scripts/AutoComplPop'
    Plugin 'vim-airline/vim-airline'
    Plugin 'vim-airline/vim-airline-themes'
    Plugin 'scrooloose/nerdtree'
    Plugin 'scrooloose/syntastic'
    Plugin 'tobyS/pdv'
    Plugin 'tobyS/vmustache'
    Plugin 'Xuyuanp/nerdtree-git-plugin'
    Plugin 'SirVer/ultisnips'
    Plugin 'majutsushi/tagbar'
    Plugin 'fatih/vim-go'
    Plugin 'tpope/vim-fugitive'
    Plugin 'evidens/vim-twig'
    Plugin 'mhinz/vim-signify'
    Plugin 'ryanoasis/vim-devicons'
    Plugin 'terryma/vim-multiple-cursors'
    Plugin 'L9'
    Plugin 'joshdick/onedark.vim'
call vundle#end()

filetype plugin indent on
colorscheme onedark

" Complete
set completeopt=longest,menuone
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType python setlocal omnifunc=pythoncomplete#CompletePython
autocmd FileType ruby setlocal omnifunc=rubycomplete#CompleteRuby

" Fugutive
set statusline=%<%f\ %h%m%r\ %b\ %{&encoding}\ 0x\ \ %{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 1
let g:syntastic_php_checkers = ['php', 'phpcs', 'phpmd']
let g:syntastic_php_phpcs_args="--standard=phpcs.xml"
let g:syntastic_error_symbol = "✗"
let g:syntastic_warning_symbol = "⚠"
let g:syntastic_enable_balloons = 1
let g:syntastic_enable_highlighting = 1
let g:syntastic_auto_jump = 1


" NerdTree
let NERDTreeShowHidden = 1
map <C-p> <Esc>:NERDTreeToggle<cr>

let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ "Unknown"   : "?"
    \ }

" Airline
let g:airline_powerline_fonts=1
let g:airline_theme='wombat'
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''

let g:webdevicons_enable = 1
let g:webdevicons_enable_nerdtree = 1
let g:webdevicons_enable_unite = 1
let g:webdevicons_enable_vimfiler = 1
let g:webdevicons_enable_airline_tabline = 1
let g:webdevicons_enable_airline_statusline = 1
let g:webdevicons_enable_ctrlp = 1
let g:webdevicons_enable_flagship_statusline = 1
let g:WebDevIconsUnicodeDecorateFileNodes = 1
let g:webdevicons_conceal_nerdtree_brackets = 1
let g:WebDevIconsNerdTreeGitPluginForceVAlign = 1
let g:WebDevIconsUnicodeGlyphDoubleWidth = 0
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
let g:DevIconsEnableFoldersOpenClose = 1
let g:DevIconsEnableFolderPatternMatching = 1

" NERDTress File highlighting
function! NERDTreeHighlightFile(extension, fg, bg, guifg, guibg)
  exec 'autocmd FileType nerdtree highlight ' . a:extension .' ctermbg='. a:bg .' ctermfg='. a:fg .' guibg='. a:guibg .' guifg='. a:guifg
  exec 'autocmd FileType nerdtree syn match ' . a:extension .' #^\s\+.*'. a:extension .'$#'
endfunction

call NERDTreeHighlightFile('jade', 'green', 'none', 'green', '#151515')
call NERDTreeHighlightFile('ini', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('md', 'blue', 'none', '#3366FF', '#151515')
call NERDTreeHighlightFile('yml', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('config', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('conf', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('json', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('html', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('styl', 'cyan', 'none', 'cyan', '#151515')
call NERDTreeHighlightFile('css', 'cyan', 'none', 'cyan', '#151515')
call NERDTreeHighlightFile('coffee', 'Red', 'none', 'red', '#151515')
call NERDTreeHighlightFile('js', 'Red', 'none', '#ffa500', '#151515')
call NERDTreeHighlightFile('php', 'Magenta', 'none', '#ff00ff', '#151515')
call NERDTreeHighlightFile('ds_store', 'Gray', 'none', '#686868', '#151515')
call NERDTreeHighlightFile('gitconfig', 'Gray', 'none', '#686868', '#151515')
call NERDTreeHighlightFile('gitignore', 'Gray', 'none', '#686868', '#151515')
call NERDTreeHighlightFile('bashrc', 'Gray', 'none', '#686868', '#151515')
call NERDTreeHighlightFile('bashprofile', 'Gray', 'none', '#686868', '#151515')


" Ctags
let Tlist_Ctags_Cmd = "/usr/bin/ctags"
let Tlist_WinWidth = 40
let Tlist_Use_Right_Window = 1
let Tlist_Auto_Update = 1
let Tlist_Auto_Highlight_Tag = 1
let Tlist_Compact_Format = 1

" SpaceHighlight
autocmd syntax * SpaceHi

" Omni completion
imap <C-F> <C-X><C-O>

let g:ycm_filepath_completion_use_working_dir = 1
let g:ycm_add_preview_to_completeopt = 1
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_semantic_triggers =  {
  \   'c' : ['->', '.'],
  \   'objc' : ['->', '.'],
  \   'ocaml' : ['.', '#'],
  \   'cpp,objcpp' : ['->', '.', '::'],
  \   'perl' : ['->'],
  \   'php' : ['->', '::', '\'],
  \   'cs,java,javascript,d,python,perl6,scala,vb,elixir,go' : ['.'],
  \   'vim' : ['re![_a-zA-Z]+[_\w]*\.'],
  \   'ruby' : ['.', '::'],
  \   'lua' : ['.', ':'],
  \   'erlang' : [':'],
  \ }

" Invisibles
nmap <leader>l :set list!<CR>
set listchars=tab:▸\ ,eol:¬
highlight NonText guifg=#4a4a59
highlight SpecialKey guifg=#4a4a59

" PDV
let g:pdv_template_dir = $HOME . "/.local/share/vim/bundle/pdv/templates_snip"
map <C-l> <Esc>:call pdv#DocumentWithSnip()<cr>

" Taglist
nmap <C-T> :TagbarToggle<CR>

